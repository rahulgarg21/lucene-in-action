<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.polyglot.lucene</groupId>
    <artifactId>lucene-in-action</artifactId>
    <version>1.0-SNAPSHOT</version>
    <modules>
        <module>chapter-01</module>
        <module>test-support</module>
    </modules>

    <name>Lucene In Action Parent</name>
    <packaging>pom</packaging>


    <properties>

        <!-- PROJECT SETTINGS-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <main.basedir>${project.basedir}</main.basedir>

        <!-- PROJECT DEPENDENCIES -->
        <slf4j.version>1.7.25</slf4j.version>
        <logback.version>1.2.3</logback.version>
        <lucene.version>7.1.0</lucene.version>
        <vavr.version>0.9.1</vavr.version>
        <commons.cli.version>1.4</commons.cli.version>

        <!--TESTING DEPENDENCIES -->
        <junit.jupiter.version>5.0.0</junit.jupiter.version>
        <junit.platform.version>1.0.0</junit.platform.version>
        <mockito.version>2.5.7</mockito.version>
        <!--TEST SETTINGS -->
        <surefire.redirectTestOutputToFile>true</surefire.redirectTestOutputToFile>

        <!-- PLUGINS VERSIONS -->
        <compiler.plugin.version>3.3</compiler.plugin.version>
        <surefire.plugin.version>2.19.1</surefire.plugin.version>
        <failsafe.plugin.version>2.19.1</failsafe.plugin.version>
        <findbugs.plugin.version>3.0.2</findbugs.plugin.version>
        <pmd.plugin.version>3.5</pmd.plugin.version>
        <checkstyle.plugin.version>2.16</checkstyle.plugin.version>
        <javadoc.plugin.version>2.10.4</javadoc.plugin.version>
        <source.plugin.version>2.4</source.plugin.version>
        <jar.plugin.version>2.4</jar.plugin.version>
        <maven.site.plugin>3.5.1</maven.site.plugin>
        <jacoco.plugin.version>0.7.9</jacoco.plugin.version>
        <deploy.plugin.version>2.8</deploy.plugin.version>
        <assembly.plugin.version>3.1.0</assembly.plugin.version>

        <!--PLUGIN SETTINGS -->
        <compiler.source.version>1.8</compiler.source.version>
        <compiler.target.version>1.8</compiler.target.version>
        <unit.test.pattern>**/*Test.java</unit.test.pattern>
        <skip.unit.tests>false</skip.unit.tests>
        <integration.test.pattern>**/*IT.java</integration.test.pattern>
        <skip.integration.tests>true</skip.integration.tests>
        <pmd.violation.buildfail>true</pmd.violation.buildfail>
        <findbugs.failOnError>true</findbugs.failOnError>
        <checkstyle.failOnViolation>true</checkstyle.failOnViolation>
        <checkstyle.file.name>checkstyle.xml</checkstyle.file.name>
        <checkstyle.suppression.file.name>suppressions.xml</checkstyle.suppression.file.name>
        <jacoco.it.execution.data.file>${project.build.directory}/coverage-reports/jacoco-it.exec
        </jacoco.it.execution.data.file>
        <jacoco.ut.execution.data.file>${project.build.directory}/coverage-reports/jacoco-ut.exec
        </jacoco.ut.execution.data.file>


    </properties>


    <dependencyManagement>

        <dependencies>

            <!-- LOGGING -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>

            <!-- APACHE LUCENE -->
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-core</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-analyzers-common</artifactId>
                <version>${lucene.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.lucene</groupId>
                <artifactId>lucene-queryparser</artifactId>
                <version>${lucene.version}</version>
            </dependency>

            <!-- FUNCTIONAL PROGRAMMING UTILITY -->
            <dependency>
                <groupId>io.vavr</groupId>
                <artifactId>vavr</artifactId>
                <version>${vavr.version}</version>
            </dependency>

            <!-- COMMAND LINE UTILITY -->
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons.cli.version}</version>
            </dependency>


            <!-- TEST DEPENDENCIES -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

        </dependencies>

    </dependencyManagement>

    <dependencies>
        <!-- LOGGING -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <!-- APACHE LUCENE -->
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-analyzers-common</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.lucene</groupId>
            <artifactId>lucene-queryparser</artifactId>
        </dependency>

        <!-- FUNCTIONAL PROGRAMMING UTILITY -->
        <dependency>
            <groupId>io.vavr</groupId>
            <artifactId>vavr</artifactId>
        </dependency>
    </dependencies>


    <build>

        <pluginManagement>

            <plugins>

                <!-- COMPILER PLUGIN -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${compiler.plugin.version}</version>
                    <configuration>
                        <source>${compiler.target.version}</source>
                        <target>${compiler.source.version}</target>
                    </configuration>
                </plugin>

                <!-- JAR PLUGIN -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${jar.plugin.version}</version>
                    <configuration>
                        <archive>
                            <manifest>
                                <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
                            </manifest>
                            <manifestEntries>
                                <Implementation-Build-Version>${project.version}</Implementation-Build-Version>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>

                <!-- MAVEN ASSEMBLY PLUGIN -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${assembly.plugin.version}</version>
                    <configuration>
                        <descriptorRefs>
                            <descriptorRef>jar-with-dependencies</descriptorRef>
                        </descriptorRefs>
                        <finalName>${project.artifactId}-${project.version}-uber</finalName>
                        <appendAssemblyId>false</appendAssemblyId>
                    </configuration>
                    <executions>
                        <execution>
                            <id>make-uber-jar</id>
                            <phase>package</phase>
                            <goals>
                                <goal>single</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- MAVEN SOURCE PLUGIN -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-source-plugin</artifactId>
                    <version>${source.plugin.version}</version>
                    <configuration>
                        <excludeResources>true</excludeResources>
                    </configuration>
                    <executions>
                        <execution>
                            <id>attach-sources</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>jar-no-fork</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- DEPLOY PLUGIN -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>${deploy.plugin.version}</version>
                    <configuration>
                        <deployAtEnd>true</deployAtEnd>
                    </configuration>
                </plugin>


                <!-- MAVEN JAVADOC PLUGIN -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>${javadoc.plugin.version}</version>
                    <configuration>
                        <!-- minimize console output messages -->
                        <quiet>true</quiet>
                        <verbose>false</verbose>
                        <useStandardDocletOptions>false</useStandardDocletOptions>
                    </configuration>
                    <executions>
                        <execution>
                            <id>aggregate</id>
                            <phase>site</phase>
                            <goals>
                                <goal>aggregate</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>attach-javadoc</id>
                            <goals>
                                <goal>jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>


                <!-- SUREFIRE TEST PLUGIN -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.plugin.version}</version>
                    <configuration>
                        <skipTests>${skip.unit.tests}</skipTests>
                        <argLine>-Xmx2048m -Djava.awt.headless=true -XX:+UseConcMarkSweepGC
                            -XX:OnOutOfMemoryError="kill -9 %p" -XX:+HeapDumpOnOutOfMemoryError
                        </argLine>
                        <redirectTestOutputToFile>${surefire.redirectTestOutputToFile}</redirectTestOutputToFile>
                        <parallel>methods</parallel>
                        <threadCount>8</threadCount>
                        <forkCount>8</forkCount>
                        <reuseForks>true</reuseForks>
                        <reportFormat>xml</reportFormat>
                        <trimStackTrace>false</trimStackTrace>
                        <systemPropertyVariables>
                            <java.io.tmpdir>${project.build.directory}</java.io.tmpdir>
                            <logback.configurationFile>
                                ${basedir}/src/test/resources/logback-test.xml
                            </logback.configurationFile>
                            <HADOOP_HOME>${project.build.directory}</HADOOP_HOME>
                        </systemPropertyVariables>
                        <includes>
                            <include>${unit.test.pattern}</include>
                        </includes>
                        <excludes>
                            <exclude>${integration.test.pattern}</exclude>
                        </excludes>
                        <!-- Sets the VM argument line used when unit tests are run. -->
                        <argLine>${surefireArgLine}</argLine>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.junit.platform</groupId>
                            <artifactId>junit-platform-surefire-provider</artifactId>
                            <version>${junit.platform.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- FAIL SAFE PLUGIN FOR INTEGRATION TEST -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${failsafe.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>integration-tests</id>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                            <configuration>
                                <skipTests>${skip.integration.tests}</skipTests>
                                <!-- Sets the VM argument line used when integration tests are run. -->
                                <!--suppress MavenModelInspection -->
                                <argLine>${failsafeArgLine}</argLine>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- FIND BUGS (STATIC CODE ANALYSIS) PLUGIN -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>${findbugs.plugin.version}</version>
                    <configuration>
                        <effort>Max</effort>
                        <threshold>Low</threshold>
                        <xmlOutput>true</xmlOutput>
                        <!-- BUILD FAIL ON FINDBUGS ERRORS -->
                        <failOnError>${findbugs.failOnError}</failOnError>
                        <excludeFilterFile>${main.basedir}/findbugs-exclude.xml</excludeFilterFile>
                        <outputDirectory>${project.reporting.outputDirectory}/findbugs</outputDirectory>
                        <findbugsXmlOutputDirectory>${project.reporting.outputDirectory}/findbugs
                        </findbugsXmlOutputDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>analyze-compile</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- PMD PLUGIN SETUP -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-pmd-plugin</artifactId>
                    <version>${pmd.plugin.version}</version>
                    <configuration>
                        <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                        <targetJdk>${compiler.target.version}</targetJdk>
                        <linkXRef>false</linkXRef>
                        <excludes>
                            <!-- IGNORE PMD & CPD ANALYTICS MODEL FACADE OBJECTS -->
                            <exclude>**/model/facade/**/*.java</exclude>
                        </excludes>
                        <!-- BUILD FAIL ON PMD VIOLATION -->
                        <failOnViolation>${pmd.violation.buildfail}</failOnViolation>
                        <targetDirectory>${project.reporting.outputDirectory}/pmd</targetDirectory>
                    </configuration>
                    <executions>
                        <execution>
                            <id>pmd-check</id>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <printFailingErrors>true</printFailingErrors>
                                <excludeFromFailureFile>${main.basedir}/pmd-exclude.properties</excludeFromFailureFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>cpd-check</id>
                            <goals>
                                <goal>cpd-check</goal>
                            </goals>
                            <configuration>
                                <printFailingErrors>true</printFailingErrors>
                                <excludeFromFailureFile>${main.basedir}/cpd-exclude.properties</excludeFromFailureFile>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- CHECKSTYLE PLUGIN -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${checkstyle.plugin.version}</version>
                    <executions>
                        <execution>
                            <id>validate</id>
                            <phase>validate</phase>
                            <configuration>
                                <configLocation>${checkstyle.file.name}</configLocation>
                                <suppressionsLocation>${checkstyle.suppression.file.name}</suppressionsLocation>
                                <encoding>UTF-8</encoding>
                                <consoleOutput>true</consoleOutput>
                                <!-- BUILD FAIL ON CHECKSTYLE VIOLATION -->
                                <failOnViolation>${checkstyle.failOnViolation}</failOnViolation>
                                <includeTestSourceDirectory>true</includeTestSourceDirectory>
                                <outputFile>${project.reporting.outputDirectory}/checkstyle</outputFile>
                            </configuration>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>6.19</version>
                        </dependency>
                    </dependencies>
                </plugin>

                <!-- JACOCO CODE COVERAGE PLUGIN -->
                <plugin>
                    <groupId>org.jacoco</groupId>
                    <artifactId>jacoco-maven-plugin</artifactId>
                    <version>${jacoco.plugin.version}</version>
                    <configuration>
                        <excludes>
                            <!-- Exclude all test classes for code coverage reports -->
                            <exclude>**/test/**</exclude>
                            <!-- Exclude all domain classes as they should only contain domain objects, no logic -->
                            <exclude>**/domain/**</exclude>
                            <!-- Exclude all model config classes as they should only contain no logic -->
                            <exclude>**/model/config/**</exclude>
                            <!-- Exclude all facade classes as they should only contain facade objects, no logic -->
                            <exclude>**/facade/**</exclude>
                            <!-- Exclude mixin class for code coverage as they are just for json parsing hints -->
                            <exclude>**/mixin/**</exclude>
                            <!-- Exclude classes ending with "Constants" as they should only store static constants -->
                            <exclude>**/*Constants.*</exclude>
                            <!-- Exclude classes ending with "Module" as they are used for wiring beans by guice -->
                            <exclude>**/*Module.*</exclude>
                            <!-- Exclude classes ending with "Exception" as they are mostly wrapper over java
                            exceptions -->
                            <exclude>**/*Exception.*</exclude>
                            <!-- Exclude classes ending with "Entity" as they should not contain any logic -->
                            <exclude>**/*Entity.*</exclude>
                        </excludes>
                    </configuration>
                    <executions>
                        <!-- prepare jacoco agent before unit tests -->
                        <execution>
                            <id>pre-unit-test</id>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${jacoco.ut.execution.data.file}</destFile>
                                <propertyName>surefireArgLine</propertyName>
                            </configuration>
                        </execution>
                        <!-- generate unit test coverage report -->
                        <execution>
                            <id>post-unit-test</id>
                            <phase>test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${jacoco.ut.execution.data.file}</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-ut</outputDirectory>
                            </configuration>
                        </execution>
                        <!-- prepare jacoco agent before integration tests -->
                        <execution>
                            <id>pre-integration-test</id>
                            <phase>pre-integration-test</phase>
                            <goals>
                                <goal>prepare-agent</goal>
                            </goals>
                            <configuration>
                                <destFile>${jacoco.it.execution.data.file}</destFile>
                                <propertyName>failsafeArgLine</propertyName>
                            </configuration>
                        </execution>
                        <!-- generate integration test coverage report -->
                        <execution>
                            <id>post-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${jacoco.it.execution.data.file}</dataFile>
                                <outputDirectory>${project.reporting.outputDirectory}/jacoco-it</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

            </plugins>


        </pluginManagement>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>

        </plugins>


    </build>


</project>
